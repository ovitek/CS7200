2060+250
2445-2310
19403.78+10069.13
(30-25)*60 + (135-25)*40
((30-25)*60 + (135-25)*40) - 4059.24
1999*3
1200*4
1200*3
800*3
2400+3600
1428/6743
100/6
165+265
430*0.1
78*25
2267.70+4150
library(lme4)
data("Dyestuff")
?Dyestuff
Dyestuff$Yield
13*5
(13+6)*5
24*5
65+15+15+25
?order
order(c(1,2,3))
order(c(3,2,1))
order(c(1,3,2))
order(c(1,5,2))
?hoslem.test
0.5*0.5*0.33
0.5*0.33
430*15
3*9
6450*3
25*40*4
25*8*23
30*8*23
27*8*23
28*8*23
28*4*23*12
30*8*23
30*4*23*12
5000*12
3,000*6
3000*6
3000*6*3
4200*6
5200*6
4200*6
4200*6*5
4200*5
4200*5*5
4200*5*5
sqrt(3)
plot(pisa$year, out.pred$fit)
lines(pisa$year, out.pred$fit - W*out.pred$se.fit, lty=3)
lines(pisa$year, out.pred$fit + W*out.pred$se.fit, lty=3)
pisa <- data.frame(
year=c(75:87),
lean=c(642, 644, 656, 667, 673, 688, 696, 698, 713, 717, 725, 742, 757)
)
scatter.smooth(pisa$year, pisa$lean, xlab='Year', ylab='Lean')
# fit linear regression
out <- lm(lean ~ year, data=pisa)
predict.lm(out, interval='confidence')
predict.lm(out, interval='prediction')
plot(pisa$year, pisa$lean)
plot(pisa$year, pisa$lean)
lines(pisa$year, predict.lm(out, interval='confidence')$lwr, lty=3)
lines(pisa$year, predict.lm(out, interval='confidence')$upr, lty=3)
predict.lm(out, interval='confidence')
predict.lm(out, interval='prediction')
plot(pisa$year, pisa$lean)
lines(pisa$year, predict.lm(out, interval='confidence')$lwr, lty=3)
lines(pisa$year, predict.lm(out, interval='confidence')$upr, lty=3)
plot(pisa$year, pisa$lean)
lines(pisa$year, predict.lm(out, interval='confidence')[,'lwr'], lty=3)
lines(pisa$year, predict.lm(out, interval='confidence')[,'upr'], lty=3)
lines(pisa$year, predict.lm(out, interval='prediction')[,'lwr'], lty=2)
lines(pisa$year, predict.lm(out, interval='prediction')[,'upr'], lty=2)
plot(pisa$year, pisa$lean)
lines(pisa$year, predict.lm(out, interval='confidence')[,'lwr'], lty=3, col="blue")
lines(pisa$year, predict.lm(out, interval='confidence')[,'upr'], lty=3, col="blue")
lines(pisa$year, predict.lm(out, interval='prediction')[,'lwr'], lty=2, col="red")
lines(pisa$year, predict.lm(out, interval='prediction')[,'upr'], lty=2, col="red")
legend('topleft', lty=c(2,3), col=c("red", "blue"), c("prediction", "confidence"))
plot(year, lean, data=pisa)
lines(pisa$year, predict.lm(out, interval='confidence')[,'lwr'], lty=3, col="blue")
lines(pisa$year, predict.lm(out, interval='confidence')[,'upr'], lty=3, col="blue")
lines(pisa$year, predict.lm(out, interval='prediction')[,'lwr'], lty=2, col="red")
lines(pisa$year, predict.lm(out, interval='prediction')[,'upr'], lty=2, col="red")
legend('topleft', lty=c(2,3), col=c("red", "blue"), c("prediction", "confidence"))
plot(pisa$year, pisa$lean, xlab="Year", ylab="Lean")
lines(pisa$year, predict.lm(out, interval='confidence')[,'lwr'], lty=3, col="blue")
lines(pisa$year, predict.lm(out, interval='confidence')[,'upr'], lty=3, col="blue")
lines(pisa$year, predict.lm(out, interval='prediction')[,'lwr'], lty=2, col="red")
lines(pisa$year, predict.lm(out, interval='prediction')[,'upr'], lty=2, col="red")
legend('topleft', lty=c(2,3), col=c("red", "blue"), c("prediction", "confidence"))
pdf("~/Dropbox/Olga/Teaching/CS7200/Spring20/LectureNotes/2_one_variable_regression_inference/figs/pisa=prediction.pdf")
plot(pisa$year, pisa$lean, xlab="Year", ylab="Lean")
lines(pisa$year, predict.lm(out, interval='confidence')[,'lwr'], lty=3, col="blue")
lines(pisa$year, predict.lm(out, interval='confidence')[,'upr'], lty=3, col="blue")
lines(pisa$year, predict.lm(out, interval='prediction')[,'lwr'], lty=2, col="red")
lines(pisa$year, predict.lm(out, interval='prediction')[,'upr'], lty=2, col="red")
legend('topleft', lty=c(2,3), col=c("red", "blue"), c("prediction", "confidence"))
dev.off()
pdf("~/Dropbox/Olga/Teaching/CS7200/Spring20/LectureNotes/2_one_variable_regression_inference/figs/pisa=prediction.pdf")
plot(pisa$year, pisa$lean, xlab="Year", ylab="Lean", lwd=2)
lines(pisa$year, predict.lm(out, interval='confidence')[,'lwr'], lty=3, col="blue")
lines(pisa$year, predict.lm(out, interval='confidence')[,'upr'], lty=3, col="blue")
lines(pisa$year, predict.lm(out, interval='prediction')[,'lwr'], lty=2, col="red")
lines(pisa$year, predict.lm(out, interval='prediction')[,'upr'], lty=2, col="red")
legend('topleft', lty=c(2,3), col=c("red", "blue"), c("prediction", "confidence"))
dev.off()
16*5
112+123+80+112.83
100/5
349+47+264
500+200+150+130+50
41+7+30+15
43+10+30+15
41+33+10+12
41+34+10+12
506.60+25.22+23.75+38.23
24*2/5
(3*2+5*10)*9.6
537/20
28*0.18
X <- read.table("http://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%2019%20Data%20Sets/CH19TA07.txt", sep="", as.is=TRUE, header=FALSE)
dimnames(X)[[2]] <- c("sales", "height", "width", "replicate")
X
X$heightF.rl <- relevel(X$heightF, ref = 3)
X$widthF.rl <- relevel(X$widthF, ref = 2)
fit1.rl <- lm(sales ~ heightF.rl*widthF.rl, data = X)
fit1.rl$coefficients # now H3 is the reference
anova(fit1.rl) # no change
X$heightF <- factor(X$height)
X$widthF <- factor(X$width)
class(X$height)
class(X$heightF)
X$heightF
X$heightF.rl <- relevel(X$heightF, ref = 3)
X$widthF.rl <- relevel(X$widthF, ref = 2)
fit1.rl <- lm(sales ~ heightF.rl*widthF.rl, data = X)
fit1.rl$coefficients # now H3 is the reference
anova(fit1.rl) # no change
summary(fit1.rl)
plot(fit1$fitted.values, fit1$residuals, pch=16, cex=.5, col="blue")
abline(h=0, lwd=2, col="red")
fit1 <- lm(sales ~ heightF*widthF, data = X)
plot(fit1$fitted.values, fit1$residuals, pch=16, cex=.5, col="blue")
abline(h=0, lwd=2, col="red")
qqnorm(fit1$residuals)
qqline(fit1$residuals)
library(gmodels)
anova(fit1)
coef(fit1)
length(coef(fit1))
names(contrast.function) <- names(coef(fit1))
contrast.function <- c(0,  1, -.5, 0, .5, -.25)
names(contrast.function) <- names(coef(fit1))
contrast.function
test.result <- estimable(fit1, contrast.function)
test.result
rownames(test.result) <- c("height 2 vs heights 1 and 3")
test.result
delta <- seq(from=1, to=15, length=15)
alpha <- 0.05
beta <- 0.2
num <- (qnorm(1-beta) + qnorm(1-alpha/2))^2
den <- ( delta / summary(fit1)$sigma )^2
plot(delta, 2*num/den, type="l", ylim=c(0,50),
xlab="Minimal difference in sales to detect",
ylab="Minimal number of replicates per group")
X$heightF.rl <- relevel(X$heightF, ref = 3)
X$widthF.rl <- relevel(X$widthF, ref = 2)
fit1.rl <- lm(sales ~ heightF.rl*widthF.rl, data = X)
summary(fit1.rl)
fit1.rl$coefficients # now H3 is the reference
anova(fit1.rl) # no change
test.result
contrast.function
coef(fit1)
coef(fit1)
contrast.function
source('~/Documents/GitHub/CS7200/S20/build_site.R')
